#pragma once
#include <windows.h>
#include <tlhelp32.h>
#include <dbghelp.h>
#include "defs.h"

BOOL ResolveAllApis(void);


// Function pointer types
typedef BOOL(WINAPI* PFN_P32F)(HANDLE, LPPROCESSENTRY32W);
typedef BOOL(WINAPI* PFN_P32N)(HANDLE, LPPROCESSENTRY32W);
typedef HANDLE(WINAPI* PFN_OP)(DWORD, BOOL, DWORD);
typedef FARPROC(WINAPI* PFN_GPA)(HMODULE, LPCSTR);
typedef NTSTATUS(NTAPI* PFN_NTCPX)(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, HANDLE, ULONG, HANDLE, HANDLE, HANDLE, BOOLEAN);
typedef HANDLE(WINAPI* PFN_CTH)(DWORD, DWORD);
typedef BOOL(WINAPI* PFN_OPTK)(HANDLE, DWORD, PHANDLE);
typedef BOOL(WINAPI* PFN_DUPTOK)(HANDLE, DWORD, LPSECURITY_ATTRIBUTES, SECURITY_IMPERSONATION_LEVEL, TOKEN_TYPE, PHANDLE);
typedef BOOL(WINAPI* PFN_IMP)(HANDLE);
typedef BOOL(WINAPI* PFN_STT)(PHANDLE, HANDLE);
typedef BOOL(WINAPI* PFN_ATP)(HANDLE, BOOL, PTOKEN_PRIVILEGES, DWORD, PTOKEN_PRIVILEGES, PDWORD);
typedef BOOL(WINAPI* PFN_LPVA)(LPCWSTR, LPCWSTR, PLUID);
typedef BOOL(WINAPI* PFN_MDWD)(HANDLE, DWORD, HANDLE, MINIDUMP_TYPE, PMINIDUMP_EXCEPTION_INFORMATION, PMINIDUMP_USER_STREAM_INFORMATION, PMINIDUMP_CALLBACK_INFORMATION);
typedef DWORD(WINAPI* PFN_GPID)(HANDLE);

// Exported resolved API pointers
extern PFN_P32F pP32F;
extern PFN_P32N pP32N;
extern PFN_OP pOP;
extern PFN_GPA pGPA;
extern PFN_NTCPX pNTCPX;
extern PFN_CTH pCTH;
extern PFN_OPTK pOPTK;
extern PFN_DUPTOK pDUPTOK;
extern PFN_IMP pIMP;
extern PFN_STT pSTT;
extern PFN_ATP pATP;
extern PFN_LPVA pLPVA;
extern PFN_MDWD pMDWD;
extern PFN_GPID pGPID;
